// EVM DNA definitions (filter).
syntax = "proto3";

package evm.v2;

import "common.proto";

message Filter {
  // Include header.
  HeaderFilter header = 1;
  // Filter withdrawals.
  repeated WithdrawalFilter withdrawals = 2;
  // Filter transactions.
  repeated TransactionFilter transactions = 3;
  // Filter logs.
  repeated LogFilter logs = 4;
}

message HeaderFilter {
  // Always include header data. Defaults to `false`.
  optional bool always = 1;
}

message WithdrawalFilter {
  // Filter based on the validator index.
  optional uint64 validator_index = 1;
  // Filter based on the withdrawal's target address.
  Address address = 2;
}

message TransactionFilter {
  // Filter based on the transaction's sender address.
  Address from = 1;
  // Filter based on the transaction's recipient address.
  Address to = 2;
  // Flag to request the transaction's receipt. Defaults to `false`.
  optional bool include_receipt = 3;
  // Flag to request the transaction's logs. Defaults to `false`.
  optional bool include_logs = 4;
}

message LogFilter {
  // Filter based on the log's contract address.
  Address address = 1;
  // Filter based on the log's topics.
  repeated Topic topics = 2;
  // Only returns logs with topics of exactly the same length as the filter.
  //
  // Defaults to `false`.
  optional bool strict = 3;
  // Flag to request the log's transaction. Defaults to `false`.
  optional bool include_transaction = 4;
  // Flag to request the log's receipt. Defaults to `false`.
  optional bool include_receipt = 5;
}

// Topic filter.
message Topic {
  // Topic value. Leave empty to match any topic.
  B256 value = 1;
}
